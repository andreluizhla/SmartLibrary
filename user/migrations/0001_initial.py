# Generated by Django 5.2.3 on 2025-06-25 11:18

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
import validadores.validar_info
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type_user', models.PositiveSmallIntegerField(choices=[(0, 'Leitor'), (1, 'Funcionário'), (2, 'Bibliotecário')], default=0, verbose_name='Tipo de Usuário')),
                ('username', models.CharField(help_text='Esse nome ficará no banco de dados da Secretaria de Educação do Paraná', max_length=150, unique=True, validators=[validadores.validar_info.validate_name], verbose_name='Nome Completo')),
                ('cpf', models.CharField(help_text='Não use pontos nem traços', max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11), validadores.validar_info.validate_cpf], verbose_name='CPF')),
                ('phone', models.CharField(help_text='Digite apenas números, sem pontuações ou espaços.', max_length=11, validators=[django.core.validators.MinLengthValidator(10), validadores.validar_info.validate_phone], verbose_name='Telefone')),
                ('cgm', models.CharField(blank=True, help_text='Código Geral de Matrícula (10 dígitos)', max_length=10, null=True, unique=True, validators=[validadores.validar_info.validate_cgm], verbose_name='CGM')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'permissions': [('gerenciar_catalogo', 'Pode gerenciar o catálogo de livros'), ('gerenciar_emprestimos', 'Pode gerenciar empréstimos e reservas'), ('gerenciar_usuarios', 'Pode gerenciar cadastros de usuários'), ('visualizar_catalogo', 'Pode visualizar o catálogo de livros'), ('acompanhar_emprestimos', 'Pode acompanhar empréstimos e reservas'), ('realizar_emprestimos', 'Pode realizar empréstimos e reservas'), ('editar_proprio_perfil', 'Pode editar próprio perfil e senha')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
